import java.io.*;
import java.util.*;


public class HailStone{
    //    int n = 0;
    int longest = 1;
    int longester = 0;
    
    public static void main(String[] args){
	HailStone HS = new HailStone();
	//int n = Integer.parseInt(args[1]);
     	
	HS.hail(3);
	System.out.println("Hail Length: " + HS.hailLen(3));
	System.out.println("Longest Hail: "+ HS.longestHail(3));
    }

    public int longestHail(int n){
	longest = 0;
	if (n == 1)
	    return 1; 
	
	else {
	    hailLen(n-1);
	    if (hailLen(n-1) > longester)
	    longester = hailLen(n-1);
	}
	return longester;
	// 2. hailLen(n) : What is the length of the sequence generated by hail(n)

	// example:
	// hailLen(1) : 1
	// hailLen(2) : 2
	// hailLen(3) : 8
	// hailLen(4) : 3
	// hailLen(5) : 6
	// hailLen(6) : 9
    }

    public void hail(int n){
	if (n==1)
	    System.out.println(n);
	else {
	    if (n%2 == 0){
		System.out.println(n);
		//longest++;
		hail(n/2);
	    }
	    if (n%2 == 1){
		System.out.println(n);
		//longest++;
		hail((3*n)+1);
	    }
	}
		// example:
	// hail(1) 1
	// hail(2) 2 1
	// hail(3) 3 10 5 16 8 4 2 1
	// hail(4) 4 2 1
	// hail(5) 5 16 8 4 2 1
	// hail(6) 6 3 10 5 16 8 4 2 1
    }
    
    public int hailLen(int n){
	if (n==1)
	    return longest;
	else {
	    longest++;
	    if (n%2 == 0)
		hailLen(n/2);
	    if (n%2 == 1)
		hailLen((3*n)+1);
	}
	return longest; 
    }
	// 3. longestHail(n) : what starting value from 1 to n generates the longest length sequence.
	// examples:
	// longestHail(1)  : 1    
	// longestHail(2)  : 2
	// longestHail(3)  : 3  
	// longestHail(4)  : 3
	// longestHail(5)  : 3
	// longestHail(6)  : 6 
    
}