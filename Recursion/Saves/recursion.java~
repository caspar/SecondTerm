public class recursion{

    public String firstName(){
	return "ALEXANDER";
    }

    public String middleName(){
	return "CASPAR";
    }
    
    public String lastName(){
	return "LANT";
    }
    
    public int hailLen(int n){ // hailLen(n) : What is the length of the sequence generated by hail(n)
	if (n == 1)
	    return 1;
	if (n%2 == 0)
	    return hailLen(n/2) + 1;
	else
	    return hailLen((3*n)+1) + 1;
    }
    
    public int longestHail(int n){ // 3. longestHail(n) : what starting value from 1 to n generates the longest length sequence.

	if (n == 1)
	    return 1;
	else{
	    if (hailLen(n) > longestHail(n-1)){
		return hailLen(n);
	    }
	    return longestHail(n-1);
	}
    }	

    private int fibHelp(int penult, int last, int n){
	if (n == 0)
	    return penult; 
	else 
	    return fibHelp(last, penult+last, n-1) + n;
    }
    public int fibItr(int n){
	if (n < 2)
	    return n;
	else
	    return fibHelp(0,1,n-2);
    }

    public recursion() {	
    }
    
}